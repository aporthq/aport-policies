{
  "id": "finance.payment.payout.v1",
  "name": "Payment Payout Policy",
  "description": "Pre-act governance for payment payout operations. Enforces per-currency caps, destination restrictions, and compliance requirements.",
  "version": "1.0.0",
  "status": "active",
  "requires_capabilities": ["payments.payout"],
  "min_assurance": "L3",
  "limits_required": [
    "supported_currencies",
    "currency_limits",
    "allowed_destination_types",
    "max_payouts_per_day",
    "compliance_checks_required"
  ],
  "required_fields": [
    "amount",
    "currency",
    "destination_type",
    "destination_id",
    "payout_method",
    "idempotency_key"
  ],
  "optional_fields": ["description", "compliance_notes", "approval_required"],
  "enforcement": {
    "currency_supported": true,
    "destination_type_allowed": true,
    "daily_cap_check": true,
    "compliance_required": true,
    "idempotency_required": true
  },
  "mcp": {
    "require_allowlisted_if_present": true
  },
  "advice": [
    "Cache /verify with ETag; 60s TTL",
    "Subscribe to status webhooks for instant suspend",
    "Log all payout attempts for Verifiable Attestation",
    "Implement daily payout tracking per currency to prevent abuse",
    "Always use unique idempotency keys to prevent duplicate payouts",
    "Verify destination accounts before processing payouts",
    "Implement compliance checks for high-value payouts",
    "Maintain audit trails for all payout operations"
  ],
  "required_context": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": [
      "amount",
      "currency",
      "destination_type",
      "destination_id",
      "payout_method",
      "idempotency_key"
    ],
    "properties": {
      "amount": {
        "type": "integer",
        "minimum": 1,
        "description": "Payout amount in minor units (e.g., cents)"
      },
      "currency": {
        "type": "string",
        "pattern": "^[A-Z]{3}$",
        "description": "ISO 4217 currency code"
      },
      "destination_type": {
        "type": "string",
        "enum": ["bank_account", "digital_wallet", "crypto_address"],
        "description": "Type of destination account"
      },
      "destination_id": {
        "type": "string",
        "description": "Destination account identifier"
      },
      "payout_method": {
        "type": "string",
        "enum": ["wire_transfer", "ach", "crypto_transfer", "digital_wallet"],
        "description": "Method of payout"
      },
      "idempotency_key": {
        "type": "string",
        "minLength": 8,
        "description": "Idempotency key for duplicate prevention"
      },
      "description": {
        "type": "string",
        "description": "Optional payout description"
      },
      "compliance_notes": {
        "type": "string",
        "description": "Compliance verification notes"
      },
      "approval_required": {
        "type": "boolean",
        "description": "Whether payout requires manual approval"
      }
    }
  },
  "evaluation_rules": [
    {
      "name": "passport_status_active",
      "condition": "passport.status == 'active'",
      "deny_code": "oap.passport_suspended",
      "description": "Passport must be active"
    },
    {
      "name": "assurance_minimum",
      "condition": "passport.assurance_level >= 'L3'",
      "deny_code": "oap.assurance_insufficient",
      "description": "Assurance level must be L3 or higher for payouts"
    },
    {
      "name": "currency_supported",
      "condition": "currency in limits.supported_currencies",
      "deny_code": "oap.currency_unsupported",
      "description": "Currency must be supported"
    },
    {
      "name": "per_tx_amount_cap",
      "condition": "amount <= limits.currency_limits[currency].max_per_tx",
      "deny_code": "oap.limit_exceeded",
      "description": "Amount must not exceed per-transaction limit"
    },
    {
      "name": "destination_type_allowed",
      "condition": "destination_type in limits.allowed_destination_types",
      "deny_code": "oap.destination_type_forbidden",
      "description": "Destination type must be allowed"
    },
    {
      "name": "daily_cap_check",
      "condition": "daily_payout_count < limits.max_payouts_per_day",
      "deny_code": "oap.limit_exceeded",
      "description": "Daily payout limit must not be exceeded"
    },
    {
      "name": "compliance_check",
      "condition": "limits.compliance_checks_required == false OR compliance_notes is not empty",
      "deny_code": "oap.compliance_check_required",
      "description": "Compliance checks must be completed for high-value payouts"
    },
    {
      "name": "idempotency_check",
      "condition": "idempotency_key not in recent_keys",
      "deny_code": "oap.idempotency_conflict",
      "description": "Idempotency key must be unique"
    }
  ],
  "cache": {
    "default_ttl_seconds": 60,
    "suspend_invalidate_seconds": 30
  },
  "deprecation": null,
  "created_at": "2025-01-30T00:00:00Z",
  "updated_at": "2025-01-30T00:00:00Z"
}
